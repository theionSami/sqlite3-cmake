PROJECT(sqlite3)
cmake_minimum_required(VERSION 3.1)

add_library(sqlite3Lib STATIC src/sqlite3.c src/sqlite3.h src/sqlite3ext.h src/shell.c)
install(TARGETS sqlite3Lib DESTINATION lib)
FILE(GLOB files "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h")
INSTALL(FILES ${files} DESTINATION include/sqlite3/)

add_executable(sqlite3Bin src/sqlite3.c src/shell.c src/sqlite3.h src/sqlite3ext.h)
#set_target_properties(sqlite PROPERTIES OUTPUT_NAME sqlite3)

#add_definitions(-DSQLITE_ENABLE_RTREE)
#add_definitions(-DSQLITE_ENABLE_FTS4)
#add_definitions(-DSQLITE_ENABLE_FTS5)
#add_definitions(-DSQLITE_ENABLE_JSON1)
#add_definitions(-DSQLITE_ENABLE_RBU)
#add_definitions(-DSQLITE_ENABLE_STAT4)
#
## Uncomment this for single-threaded variant (faster)
##add_definitions(-DSQLITE_THREADSAFE=0)
#
#if(WIN32)
#  add_custom_command(TARGET sqlite POST_BUILD
#    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:sqlite> ${CMAKE_BINARY_DIR}/sqlite3.exe
#    DEPENDS sqlite
#  )
#  install(FILES sqlite3.exe DESTINATION bin)
#else()
#  include(FindThreads)
#  target_link_libraries(sqlite m ${CMAKE_THREAD_LIBS_INIT} ${CMAKE_DL_LIBS})
#  install(TARGETS sqlite RUNTIME DESTINATION bin)
#endif()

#install(FILES src/sqlite3.h src/sqlite3ext.h DESTINATION include)
#install(TARGETS sqlite3 LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
